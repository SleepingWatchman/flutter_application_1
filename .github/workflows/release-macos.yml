name: Release macOS DMG

on:
  push:
    tags:
      - 'v*'  # Запускается при создании тега, начинающегося с 'v'

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'

      - name: Enable macOS Desktop
        run: flutter config --enable-macos-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Build macOS Release
        run: flutter build macos --release

      - name: Create DMG
        run: |
          # Получаем версию из тега
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          
          # Настройки приложения
          APP_NAME="Notes App"
          APP_PATH="build/macos/Build/Products/Release/flutter_application_1.app"
          DMG_NAME="NotesApp-macOS-v${VERSION}.dmg"
          
          # Создаем временную папку для DMG
          TEMP_DIR=$(mktemp -d)
          
          # Копируем приложение во временную папку
          cp -R "$APP_PATH" "$TEMP_DIR/"
          
          # Создаем символическую ссылку на Applications
          ln -s /Applications "$TEMP_DIR/Applications"
          
          # Создаем DMG
          hdiutil create -volname "$APP_NAME" -srcfolder "$TEMP_DIR" -ov -format UDZO "$DMG_NAME"
          
          # Очищаем временную папку
          rm -rf "$TEMP_DIR"
          
          echo "DMG_NAME=$DMG_NAME" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload DMG to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.DMG_NAME }}
          asset_name: ${{ env.DMG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload DMG as Artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg-${{ github.ref_name }}
          path: ${{ env.DMG_NAME }} 