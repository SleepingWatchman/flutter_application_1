import 'package:flutter/material.dart';
import '../models/user_model.dart';
import '../services/auth_service.dart';
import '../services/backup_service.dart';
import '../db/database_helper.dart';
import '../utils/config.dart';

class AuthProvider with ChangeNotifier {
  final AuthService _authService = AuthService();
  UserModel? _user;
  bool _isLoading = false;
  String? _error;
  bool _wasTokenExpired = false;
  bool _isGuestMode = false;
  bool _isRestoringBackup = false;
  bool _isCreatingBackupOnSignOut = false;

  UserModel? get user => _user;
  bool get isLoading => _isLoading;
  bool get isAuthenticated => _user != null || _isGuestMode;
  String? get token => _authService.token;
  String? get error => _error;
  AuthService get authService => _authService;
  bool get wasTokenExpired => _wasTokenExpired;
  bool get isGuestMode => _isGuestMode;
  bool get isRestoringBackup => _isRestoringBackup;
  bool get isCreatingBackupOnSignOut => _isCreatingBackupOnSignOut;

  AuthProvider() {
    _init();
  }

  Future<void> _init() async {
    _isLoading = true;
    notifyListeners();

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      await _authService.loadSavedData();
      _user = _authService.currentUser;
      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç—ë–∫ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî signOut
      if (_authService.isTokenExpired() && _user != null) {
        _wasTokenExpired = true;
        await signOut();
      }
    } catch (e) {
      debugPrint('Error loading saved data: $e');
    } finally {
      _isLoading = false;
      notifyListeners();
    }

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    _authService.userStream.listen((UserModel? user) {
      _user = user;
      notifyListeners();
    });
  }

  Future<void> register(String email, String password, String displayName) async {
    try {
      _isLoading = true;
      notifyListeners();

      _user = await _authService.register(email, password, displayName);
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> signIn(String email, String password, [Function()? onBackupRestored]) async {
    try {
      _isLoading = true;
      notifyListeners();

      // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
      _user = await _authService.login(email, password);
      
      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±—ç–∫–∞–ø–∞
      await _attemptBackupRestore(onBackupRestored);
      
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  /// –ü—ã—Ç–∞–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±—ç–∫–∞–ø–∞
  Future<void> _attemptBackupRestore([Function()? onBackupRestored]) async {
    if (_user == null || _authService.token == null) {
      return;
    }

    try {
      _isRestoringBackup = true;
      notifyListeners();

      print('üîÑ BACKUP: –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞...');
      
      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ª–æ–∫–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      final backupService = await _createBackupService();
      if (backupService != null) {
        await backupService.restoreFromLatestBackup();
        print('‚úÖ BACKUP: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –±—ç–∫–∞–ø–∞');
        
        // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
        if (onBackupRestored != null) {
          onBackupRestored();
        }
      }
    } catch (e) {
      print('‚ö†Ô∏è BACKUP: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞: $e');
      // –ù–µ –±—Ä–æ—Å–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –¥–∞–∂–µ –µ—Å–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
    } finally {
      _isRestoringBackup = false;
      notifyListeners();
    }
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  Future<UserBackupService?> _createBackupService() async {
    try {
      final dbHelper = DatabaseHelper();
      final token = _authService.token;
      
      if (token == null) return null;
      
      return UserBackupService(
        dbHelper,
        Config.apiBaseUrl,
        token,
      );
    } catch (e) {
      print('‚ö†Ô∏è BACKUP: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å –±—ç–∫–∞–ø–∞: $e');
      return null;
    }
  }

  /// –ü—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—ç–∫–∞–ø–∞
  Future<void> restoreUserBackup([Function()? onBackupRestored]) async {
    if (_user == null || _authService.token == null) {
      throw Exception('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }

    await _attemptBackupRestore(onBackupRestored);
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
  Future<void> _createBackupOnSignOut([Function()? onBackupCreated]) async {
    if (_user == null || _authService.token == null) {
      return;
    }

    try {
      _isCreatingBackupOnSignOut = true;
      notifyListeners();

      print('üíæ BACKUP: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞...');
      
      final backupService = await _createBackupService();
      if (backupService != null) {
        await backupService.createAndUploadBackup();
        print('‚úÖ BACKUP: –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º');
        
        // –í—ã–∑—ã–≤–∞–µ–º –∫–æ–ª–ª–±—ç–∫ –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
        if (onBackupCreated != null) {
          onBackupCreated();
        }
      }
    } catch (e) {
      print('‚ö†Ô∏è BACKUP: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º: $e');
      // –ù–µ –±—Ä–æ—Å–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤—ã—Ö–æ–¥–∞
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –¥–∞–∂–µ –µ—Å–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å
    } finally {
      _isCreatingBackupOnSignOut = false;
      notifyListeners();
    }
  }

  Future<void> signOut([Function()? onBackupCreated]) async {
    try {
      _isLoading = true;
      notifyListeners();

      // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –î–û –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
      if (_user != null && !_isGuestMode) {
        await _createBackupOnSignOut(onBackupCreated);
      }

      await _authService.signOut();
      _user = null;
      _isGuestMode = false;
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  Future<void> updateProfile({String? displayName, String? photoURL}) async {
    try {
      _isLoading = true;
      notifyListeners();

      _user = await _authService.updateProfile(
        displayName: displayName,
        photoURL: photoURL,
      );
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }

  void resetTokenExpiredFlag() {
    _wasTokenExpired = false;
    notifyListeners();
  }

  void enableGuestMode() {
    _isGuestMode = true;
    notifyListeners();
  }

  void disableGuestMode() {
    _isGuestMode = false;
    notifyListeners();
  }
} 